/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../common";

export type CollectionSettingsStruct = {
  royaltyRate: BigNumberish;
  isSoulBound: boolean;
  isFreeMintable: BigNumberish;
  isSemiTransferable: boolean;
};

export type CollectionSettingsStructOutput = [
  royaltyRate: bigint,
  isSoulBound: boolean,
  isFreeMintable: bigint,
  isSemiTransferable: boolean
] & {
  royaltyRate: bigint;
  isSoulBound: boolean;
  isFreeMintable: bigint;
  isSemiTransferable: boolean;
};

export type DataRegistrySettingsStruct = {
  disableComposable: boolean;
  disableDerivable: boolean;
};

export type DataRegistrySettingsStructOutput = [
  disableComposable: boolean,
  disableDerivable: boolean
] & { disableComposable: boolean; disableDerivable: boolean };

export interface FactoryInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "DEFAULT_ADMIN_ROLE"
      | "_addOnsManager"
      | "_collectionImplementation"
      | "_dataRegistryImplementation"
      | "_dataRegistryV2Implementation"
      | "_derivedAccountImplementation"
      | "_erc1155Implementation"
      | "_erc721AImplementation"
      | "_feeManager"
      | "account"
      | "collectionOf"
      | "create1155Collection"
      | "createAccount"
      | "createAddons"
      | "createCollection"
      | "createDataRegistry"
      | "createDataRegistryV2"
      | "createDerivedAccount"
      | "dappURI"
      | "dataRegistryOf"
      | "derivedAccountOf"
      | "getFee"
      | "getRoleAdmin"
      | "grantRole"
      | "hasRole"
      | "initialize"
      | "renounceRole"
      | "revokeRole"
      | "setAddonsManager"
      | "setFeeManager"
      | "supportsInterface"
      | "updateImplementation"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "AddonsCreated"
      | "Collection1155Created"
      | "CollectionCreated"
      | "DataRegistryCreated"
      | "DataRegistryV2Created"
      | "DerivedAccountCreated"
      | "ERC6551AccountCreated"
      | "Fee"
      | "Initialized"
      | "RoleAdminChanged"
      | "RoleGranted"
      | "RoleRevoked"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_addOnsManager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_collectionImplementation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_dataRegistryImplementation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_dataRegistryV2Implementation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_derivedAccountImplementation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_erc1155Implementation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_erc721AImplementation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_feeManager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "account",
    values: [AddressLike, BytesLike, BigNumberish, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "collectionOf",
    values: [AddressLike, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "create1155Collection",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "createAccount",
    values: [AddressLike, BytesLike, BigNumberish, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createAddons",
    values: [AddressLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "createCollection",
    values: [string, string, CollectionSettingsStruct, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createDataRegistry",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "createDataRegistryV2",
    values: [string, DataRegistrySettingsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "createDerivedAccount",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "dappURI",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "dataRegistryOf",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "derivedAccountOf",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFee",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [AddressLike, AddressLike, AddressLike, AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setAddonsManager",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setFeeManager",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateImplementation",
    values: [BigNumberish, AddressLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_addOnsManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_collectionImplementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_dataRegistryImplementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_dataRegistryV2Implementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_derivedAccountImplementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_erc1155Implementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_erc721AImplementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_feeManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "account", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "collectionOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "create1155Collection",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createAddons",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createCollection",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createDataRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createDataRegistryV2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createDerivedAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "dappURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "dataRegistryOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "derivedAccountOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFee", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revokeRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setAddonsManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFeeManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateImplementation",
    data: BytesLike
  ): Result;
}

export namespace AddonsCreatedEvent {
  export type InputTuple = [
    collection: AddressLike,
    kind: BigNumberish,
    addons: AddressLike,
    campaignId: BytesLike,
    data: BytesLike
  ];
  export type OutputTuple = [
    collection: string,
    kind: bigint,
    addons: string,
    campaignId: string,
    data: string
  ];
  export interface OutputObject {
    collection: string;
    kind: bigint;
    addons: string;
    campaignId: string;
    data: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Collection1155CreatedEvent {
  export type InputTuple = [owner: AddressLike, collection: AddressLike];
  export type OutputTuple = [owner: string, collection: string];
  export interface OutputObject {
    owner: string;
    collection: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CollectionCreatedEvent {
  export type InputTuple = [
    owner: AddressLike,
    collection: AddressLike,
    kind: BigNumberish
  ];
  export type OutputTuple = [owner: string, collection: string, kind: bigint];
  export interface OutputObject {
    owner: string;
    collection: string;
    kind: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DataRegistryCreatedEvent {
  export type InputTuple = [
    dapp: AddressLike,
    registry: AddressLike,
    dappURI: string
  ];
  export type OutputTuple = [dapp: string, registry: string, dappURI: string];
  export interface OutputObject {
    dapp: string;
    registry: string;
    dappURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DataRegistryV2CreatedEvent {
  export type InputTuple = [
    dapp: AddressLike,
    registry: AddressLike,
    dappURI: string
  ];
  export type OutputTuple = [dapp: string, registry: string, dappURI: string];
  export interface OutputObject {
    dapp: string;
    registry: string;
    dappURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DerivedAccountCreatedEvent {
  export type InputTuple = [
    underlyingCollection: AddressLike,
    underlyingTokenId: BigNumberish,
    derivedAccount: AddressLike
  ];
  export type OutputTuple = [
    underlyingCollection: string,
    underlyingTokenId: bigint,
    derivedAccount: string
  ];
  export interface OutputObject {
    underlyingCollection: string;
    underlyingTokenId: bigint;
    derivedAccount: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ERC6551AccountCreatedEvent {
  export type InputTuple = [
    account: AddressLike,
    implementation: AddressLike,
    salt: BytesLike,
    chainId: BigNumberish,
    tokenContract: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [
    account: string,
    implementation: string,
    salt: string,
    chainId: bigint,
    tokenContract: string,
    tokenId: bigint
  ];
  export interface OutputObject {
    account: string;
    implementation: string;
    salt: string;
    chainId: bigint;
    tokenContract: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace FeeEvent {
  export type InputTuple = [action: BytesLike, fee: BigNumberish];
  export type OutputTuple = [action: string, fee: bigint];
  export interface OutputObject {
    action: string;
    fee: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace InitializedEvent {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChangedEvent {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGrantedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevokedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface Factory extends BaseContract {
  connect(runner?: ContractRunner | null): Factory;
  waitForDeployment(): Promise<this>;

  interface: FactoryInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  DEFAULT_ADMIN_ROLE: TypedContractMethod<[], [string], "view">;

  _addOnsManager: TypedContractMethod<[], [string], "view">;

  _collectionImplementation: TypedContractMethod<[], [string], "view">;

  _dataRegistryImplementation: TypedContractMethod<[], [string], "view">;

  _dataRegistryV2Implementation: TypedContractMethod<[], [string], "view">;

  _derivedAccountImplementation: TypedContractMethod<[], [string], "view">;

  _erc1155Implementation: TypedContractMethod<[], [string], "view">;

  _erc721AImplementation: TypedContractMethod<[], [string], "view">;

  _feeManager: TypedContractMethod<[], [string], "view">;

  account: TypedContractMethod<
    [
      implementation: AddressLike,
      salt: BytesLike,
      chainId: BigNumberish,
      tokenContract: AddressLike,
      tokenId: BigNumberish
    ],
    [string],
    "view"
  >;

  collectionOf: TypedContractMethod<
    [owner: AddressLike, name: string, symbol: string],
    [string],
    "view"
  >;

  create1155Collection: TypedContractMethod<
    [_name: string, _symbol: string],
    [string],
    "nonpayable"
  >;

  createAccount: TypedContractMethod<
    [
      implementation: AddressLike,
      salt: BytesLike,
      chainId: BigNumberish,
      tokenContract: AddressLike,
      tokenId: BigNumberish
    ],
    [string],
    "nonpayable"
  >;

  createAddons: TypedContractMethod<
    [collection: AddressLike, kind: BigNumberish, settingsData: BytesLike],
    [string],
    "nonpayable"
  >;

  createCollection: TypedContractMethod<
    [
      name: string,
      symbol: string,
      settings: CollectionSettingsStruct,
      kind: BigNumberish
    ],
    [string],
    "nonpayable"
  >;

  createDataRegistry: TypedContractMethod<
    [dappUri: string],
    [string],
    "nonpayable"
  >;

  createDataRegistryV2: TypedContractMethod<
    [dappUri: string, settings: DataRegistrySettingsStruct],
    [string],
    "nonpayable"
  >;

  createDerivedAccount: TypedContractMethod<
    [underlyingCollection: AddressLike, underlyingTokenId: BigNumberish],
    [string],
    "nonpayable"
  >;

  dappURI: TypedContractMethod<[dapp: AddressLike], [string], "view">;

  dataRegistryOf: TypedContractMethod<[dapp: AddressLike], [string], "view">;

  derivedAccountOf: TypedContractMethod<
    [underlyingCollection: AddressLike, underlyingTokenId: BigNumberish],
    [string],
    "view"
  >;

  getFee: TypedContractMethod<
    [action: BigNumberish, times: BigNumberish],
    [[string, bigint] & { receiver: string; fee: bigint }],
    "view"
  >;

  getRoleAdmin: TypedContractMethod<[role: BytesLike], [string], "view">;

  grantRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  hasRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  initialize: TypedContractMethod<
    [
      dataRegistryImpl: AddressLike,
      collectionImpl: AddressLike,
      derivedAccountImpl: AddressLike,
      erc721Impl: AddressLike,
      dataRegistryV2Impl: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  renounceRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  revokeRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  setAddonsManager: TypedContractMethod<
    [manager: AddressLike],
    [void],
    "nonpayable"
  >;

  setFeeManager: TypedContractMethod<
    [manager: AddressLike],
    [void],
    "nonpayable"
  >;

  supportsInterface: TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    "view"
  >;

  updateImplementation: TypedContractMethod<
    [kind: BigNumberish, implementation: AddressLike],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "DEFAULT_ADMIN_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "_addOnsManager"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "_collectionImplementation"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "_dataRegistryImplementation"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "_dataRegistryV2Implementation"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "_derivedAccountImplementation"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "_erc1155Implementation"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "_erc721AImplementation"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "_feeManager"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "account"
  ): TypedContractMethod<
    [
      implementation: AddressLike,
      salt: BytesLike,
      chainId: BigNumberish,
      tokenContract: AddressLike,
      tokenId: BigNumberish
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "collectionOf"
  ): TypedContractMethod<
    [owner: AddressLike, name: string, symbol: string],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "create1155Collection"
  ): TypedContractMethod<
    [_name: string, _symbol: string],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createAccount"
  ): TypedContractMethod<
    [
      implementation: AddressLike,
      salt: BytesLike,
      chainId: BigNumberish,
      tokenContract: AddressLike,
      tokenId: BigNumberish
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createAddons"
  ): TypedContractMethod<
    [collection: AddressLike, kind: BigNumberish, settingsData: BytesLike],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createCollection"
  ): TypedContractMethod<
    [
      name: string,
      symbol: string,
      settings: CollectionSettingsStruct,
      kind: BigNumberish
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createDataRegistry"
  ): TypedContractMethod<[dappUri: string], [string], "nonpayable">;
  getFunction(
    nameOrSignature: "createDataRegistryV2"
  ): TypedContractMethod<
    [dappUri: string, settings: DataRegistrySettingsStruct],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createDerivedAccount"
  ): TypedContractMethod<
    [underlyingCollection: AddressLike, underlyingTokenId: BigNumberish],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "dappURI"
  ): TypedContractMethod<[dapp: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "dataRegistryOf"
  ): TypedContractMethod<[dapp: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "derivedAccountOf"
  ): TypedContractMethod<
    [underlyingCollection: AddressLike, underlyingTokenId: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getFee"
  ): TypedContractMethod<
    [action: BigNumberish, times: BigNumberish],
    [[string, bigint] & { receiver: string; fee: bigint }],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleAdmin"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "grantRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "hasRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "initialize"
  ): TypedContractMethod<
    [
      dataRegistryImpl: AddressLike,
      collectionImpl: AddressLike,
      derivedAccountImpl: AddressLike,
      erc721Impl: AddressLike,
      dataRegistryV2Impl: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "renounceRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setAddonsManager"
  ): TypedContractMethod<[manager: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setFeeManager"
  ): TypedContractMethod<[manager: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "supportsInterface"
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "updateImplementation"
  ): TypedContractMethod<
    [kind: BigNumberish, implementation: AddressLike],
    [void],
    "nonpayable"
  >;

  getEvent(
    key: "AddonsCreated"
  ): TypedContractEvent<
    AddonsCreatedEvent.InputTuple,
    AddonsCreatedEvent.OutputTuple,
    AddonsCreatedEvent.OutputObject
  >;
  getEvent(
    key: "Collection1155Created"
  ): TypedContractEvent<
    Collection1155CreatedEvent.InputTuple,
    Collection1155CreatedEvent.OutputTuple,
    Collection1155CreatedEvent.OutputObject
  >;
  getEvent(
    key: "CollectionCreated"
  ): TypedContractEvent<
    CollectionCreatedEvent.InputTuple,
    CollectionCreatedEvent.OutputTuple,
    CollectionCreatedEvent.OutputObject
  >;
  getEvent(
    key: "DataRegistryCreated"
  ): TypedContractEvent<
    DataRegistryCreatedEvent.InputTuple,
    DataRegistryCreatedEvent.OutputTuple,
    DataRegistryCreatedEvent.OutputObject
  >;
  getEvent(
    key: "DataRegistryV2Created"
  ): TypedContractEvent<
    DataRegistryV2CreatedEvent.InputTuple,
    DataRegistryV2CreatedEvent.OutputTuple,
    DataRegistryV2CreatedEvent.OutputObject
  >;
  getEvent(
    key: "DerivedAccountCreated"
  ): TypedContractEvent<
    DerivedAccountCreatedEvent.InputTuple,
    DerivedAccountCreatedEvent.OutputTuple,
    DerivedAccountCreatedEvent.OutputObject
  >;
  getEvent(
    key: "ERC6551AccountCreated"
  ): TypedContractEvent<
    ERC6551AccountCreatedEvent.InputTuple,
    ERC6551AccountCreatedEvent.OutputTuple,
    ERC6551AccountCreatedEvent.OutputObject
  >;
  getEvent(
    key: "Fee"
  ): TypedContractEvent<
    FeeEvent.InputTuple,
    FeeEvent.OutputTuple,
    FeeEvent.OutputObject
  >;
  getEvent(
    key: "Initialized"
  ): TypedContractEvent<
    InitializedEvent.InputTuple,
    InitializedEvent.OutputTuple,
    InitializedEvent.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged"
  ): TypedContractEvent<
    RoleAdminChangedEvent.InputTuple,
    RoleAdminChangedEvent.OutputTuple,
    RoleAdminChangedEvent.OutputObject
  >;
  getEvent(
    key: "RoleGranted"
  ): TypedContractEvent<
    RoleGrantedEvent.InputTuple,
    RoleGrantedEvent.OutputTuple,
    RoleGrantedEvent.OutputObject
  >;
  getEvent(
    key: "RoleRevoked"
  ): TypedContractEvent<
    RoleRevokedEvent.InputTuple,
    RoleRevokedEvent.OutputTuple,
    RoleRevokedEvent.OutputObject
  >;

  filters: {
    "AddonsCreated(address,uint8,address,bytes32,bytes)": TypedContractEvent<
      AddonsCreatedEvent.InputTuple,
      AddonsCreatedEvent.OutputTuple,
      AddonsCreatedEvent.OutputObject
    >;
    AddonsCreated: TypedContractEvent<
      AddonsCreatedEvent.InputTuple,
      AddonsCreatedEvent.OutputTuple,
      AddonsCreatedEvent.OutputObject
    >;

    "Collection1155Created(address,address)": TypedContractEvent<
      Collection1155CreatedEvent.InputTuple,
      Collection1155CreatedEvent.OutputTuple,
      Collection1155CreatedEvent.OutputObject
    >;
    Collection1155Created: TypedContractEvent<
      Collection1155CreatedEvent.InputTuple,
      Collection1155CreatedEvent.OutputTuple,
      Collection1155CreatedEvent.OutputObject
    >;

    "CollectionCreated(address,address,uint8)": TypedContractEvent<
      CollectionCreatedEvent.InputTuple,
      CollectionCreatedEvent.OutputTuple,
      CollectionCreatedEvent.OutputObject
    >;
    CollectionCreated: TypedContractEvent<
      CollectionCreatedEvent.InputTuple,
      CollectionCreatedEvent.OutputTuple,
      CollectionCreatedEvent.OutputObject
    >;

    "DataRegistryCreated(address,address,string)": TypedContractEvent<
      DataRegistryCreatedEvent.InputTuple,
      DataRegistryCreatedEvent.OutputTuple,
      DataRegistryCreatedEvent.OutputObject
    >;
    DataRegistryCreated: TypedContractEvent<
      DataRegistryCreatedEvent.InputTuple,
      DataRegistryCreatedEvent.OutputTuple,
      DataRegistryCreatedEvent.OutputObject
    >;

    "DataRegistryV2Created(address,address,string)": TypedContractEvent<
      DataRegistryV2CreatedEvent.InputTuple,
      DataRegistryV2CreatedEvent.OutputTuple,
      DataRegistryV2CreatedEvent.OutputObject
    >;
    DataRegistryV2Created: TypedContractEvent<
      DataRegistryV2CreatedEvent.InputTuple,
      DataRegistryV2CreatedEvent.OutputTuple,
      DataRegistryV2CreatedEvent.OutputObject
    >;

    "DerivedAccountCreated(address,uint256,address)": TypedContractEvent<
      DerivedAccountCreatedEvent.InputTuple,
      DerivedAccountCreatedEvent.OutputTuple,
      DerivedAccountCreatedEvent.OutputObject
    >;
    DerivedAccountCreated: TypedContractEvent<
      DerivedAccountCreatedEvent.InputTuple,
      DerivedAccountCreatedEvent.OutputTuple,
      DerivedAccountCreatedEvent.OutputObject
    >;

    "ERC6551AccountCreated(address,address,bytes32,uint256,address,uint256)": TypedContractEvent<
      ERC6551AccountCreatedEvent.InputTuple,
      ERC6551AccountCreatedEvent.OutputTuple,
      ERC6551AccountCreatedEvent.OutputObject
    >;
    ERC6551AccountCreated: TypedContractEvent<
      ERC6551AccountCreatedEvent.InputTuple,
      ERC6551AccountCreatedEvent.OutputTuple,
      ERC6551AccountCreatedEvent.OutputObject
    >;

    "Fee(bytes32,uint256)": TypedContractEvent<
      FeeEvent.InputTuple,
      FeeEvent.OutputTuple,
      FeeEvent.OutputObject
    >;
    Fee: TypedContractEvent<
      FeeEvent.InputTuple,
      FeeEvent.OutputTuple,
      FeeEvent.OutputObject
    >;

    "Initialized(uint8)": TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
    Initialized: TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;

    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChangedEvent.InputTuple,
      RoleAdminChangedEvent.OutputTuple,
      RoleAdminChangedEvent.OutputObject
    >;
    RoleAdminChanged: TypedContractEvent<
      RoleAdminChangedEvent.InputTuple,
      RoleAdminChangedEvent.OutputTuple,
      RoleAdminChangedEvent.OutputObject
    >;

    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >;
    RoleGranted: TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >;

    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;
    RoleRevoked: TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;
  };
}
