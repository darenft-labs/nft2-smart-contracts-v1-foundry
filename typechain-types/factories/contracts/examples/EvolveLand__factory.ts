/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EvolveLand,
  EvolveLandInterface,
} from "../../../contracts/examples/EvolveLand";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "landCollection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ethFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "erc20Fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20FeeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tbaImplementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "LAND_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyLand",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tba",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "landTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "evolveWithERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "landTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "evolveWithETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isEvolved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tbaOfLand",
    outputs: [
      {
        internalType: "address",
        name: "tba",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d9b380380610d9b83398101604081905261002f91610102565b61003833610096565b600180546001600160a01b039788166001600160a01b03199182161790915560029590955560039390935560048054928616928516929092179091556005805491851691841691909117905560068054919093169116179055610168565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100fd57600080fd5b919050565b60008060008060008060c0878903121561011b57600080fd5b610124876100e6565b95506020870151945060408701519350610140606088016100e6565b925061014e608088016100e6565b915061015c60a088016100e6565b90509295509295509295565b610c24806101776000396000f3fe60806040526004361061008f5760003560e01c806381d1f9301161005657806381d1f9301461016657806382cbc58f1461019e5780638640baa6146101e95780638da5cb5b146101fc578063f2fde38b1461021a57005b8063150b7a0214610098578063469327dd146100e25780634be616d1146101075780636964988014610127578063715018a61461015157005b3661009657005b005b3480156100a457600080fd5b506100c46100b3366004610a5d565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100ea61023a565b604080519283526001600160a01b039091166020830152016100d9565b34801561011357600080fd5b50610096610122366004610afc565b610409565b34801561013357600080fd5b5061014367016345785d8a000081565b6040519081526020016100d9565b34801561015d57600080fd5b506100966105fa565b34801561017257600080fd5b50610186610181366004610b34565b61060e565b6040516001600160a01b0390911681526020016100d9565b3480156101aa57600080fd5b506101d96101b9366004610b4d565b600760209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100d9565b6100966101f7366004610afc565b61070c565b34801561020857600080fd5b506000546001600160a01b0316610186565b34801561022657600080fd5b50610096610235366004610b79565b610925565b60008067016345785d8a000034101561029a5760405162461bcd60e51b815260206004820152601f60248201527f4d6573736167652076616c7565206973206e6f742073756666696369656e740060448201526064015b60405180910390fd5b6001546040516340d097c360e01b81523360048201526001600160a01b03909116906340d097c3906024016020604051808303816000875af11580156102e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103089190610b96565b600154604080513060208201526001600160a01b0390921690820152606081018290527f254939fe6c66667ad38a8c335fece2f1a59796854238408cc9b075297ba19506608082015290925060009060a00160408051808303601f19018152908290528051602090910120600554600654600154638a54c52f60e01b85526001600160a01b0391821660048601526024850184905246604486015281166064850152608484018790529193501690638a54c52f9060a4016020604051808303816000875af11580156103de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104029190610baf565b9150509091565b6001600160a01b038216600090815260076020908152604080832084845290915290205460ff16156104765760405162461bcd60e51b81526020600482015260166024820152754e46542069732065766f6c76656420616c726561647960501b6044820152606401610291565b6001600160a01b0382166000908152600760209081526040808320848452909152808220805460ff191660011790555163081d1f9360e41b81526004810185905230906381d1f93090602401602060405180830381865afa1580156104df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105039190610baf565b600480546003546040516323b872dd60e01b815233938101939093526001600160a01b038085166024850152604484019190915292935091909116906323b872dd906064016020604051808303816000875af1158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b9190610bcc565b50604051632142170760e11b81523360048201526001600160a01b038281166024830152604482018490528416906342842e0e90606401600060405180830381600087803b1580156105dc57600080fd5b505af11580156105f0573d6000803e3d6000fd5b5050505050505050565b61060261099e565b61060c60006109f8565b565b600154604080513060208201526001600160a01b0390921690820152606081018290527f254939fe6c66667ad38a8c335fece2f1a59796854238408cc9b075297ba195066080820152600090819060a00160408051808303601f1901815290829052805160209091012060055460065460015463246a002160e01b85526001600160a01b039182166004860152602485018490524660448601528116606485015260848401879052919350169063246a00219060a401602060405180830381865afa1580156106e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107059190610baf565b9392505050565b60025434101561075e5760405162461bcd60e51b815260206004820152601f60248201527f4d6573736167652076616c7565206973206e6f742073756666696369656e74006044820152606401610291565b6001600160a01b038216600090815260076020908152604080832084845290915290205460ff16156107cb5760405162461bcd60e51b81526020600482015260166024820152754e46542069732065766f6c76656420616c726561647960501b6044820152606401610291565b6001600160a01b0382166000908152600760209081526040808320848452909152808220805460ff191660011790555163081d1f9360e41b81526004810185905230906381d1f93090602401602060405180830381865afa158015610834573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108589190610baf565b9050600080826001600160a01b03163460405160006040518083038185875af1925050503d80600081146108a8576040519150601f19603f3d011682016040523d82523d6000602084013e6108ad565b606091505b50604051632142170760e11b81523360048201526001600160a01b03868116602483015260448201889052929450909250908616906342842e0e90606401600060405180830381600087803b15801561090557600080fd5b505af1158015610919573d6000803e3d6000fd5b50505050505050505050565b61092d61099e565b6001600160a01b0381166109925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610291565b61099b816109f8565b50565b6000546001600160a01b0316331461060c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610291565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461099b57600080fd5b600080600080600060808688031215610a7557600080fd5b8535610a8081610a48565b94506020860135610a9081610a48565b935060408601359250606086013567ffffffffffffffff80821115610ab457600080fd5b818801915088601f830112610ac857600080fd5b813581811115610ad757600080fd5b896020828501011115610ae957600080fd5b9699959850939650602001949392505050565b600080600060608486031215610b1157600080fd5b833592506020840135610b2381610a48565b929592945050506040919091013590565b600060208284031215610b4657600080fd5b5035919050565b60008060408385031215610b6057600080fd5b8235610b6b81610a48565b946020939093013593505050565b600060208284031215610b8b57600080fd5b813561070581610a48565b600060208284031215610ba857600080fd5b5051919050565b600060208284031215610bc157600080fd5b815161070581610a48565b600060208284031215610bde57600080fd5b8151801515811461070557600080fdfea2646970667358221220d00c00d32ff9fc9e3030658abd889c0844132557af07cd9a7f38af6cd71e142764736f6c63430008140033";

type EvolveLandConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EvolveLandConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EvolveLand__factory extends ContractFactory {
  constructor(...args: EvolveLandConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    landCollection: AddressLike,
    ethFee: BigNumberish,
    erc20Fee: BigNumberish,
    erc20FeeToken: AddressLike,
    factory: AddressLike,
    tbaImplementation: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      landCollection,
      ethFee,
      erc20Fee,
      erc20FeeToken,
      factory,
      tbaImplementation,
      overrides || {}
    );
  }
  override deploy(
    landCollection: AddressLike,
    ethFee: BigNumberish,
    erc20Fee: BigNumberish,
    erc20FeeToken: AddressLike,
    factory: AddressLike,
    tbaImplementation: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      landCollection,
      ethFee,
      erc20Fee,
      erc20FeeToken,
      factory,
      tbaImplementation,
      overrides || {}
    ) as Promise<
      EvolveLand & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EvolveLand__factory {
    return super.connect(runner) as EvolveLand__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EvolveLandInterface {
    return new Interface(_abi) as EvolveLandInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EvolveLand {
    return new Contract(address, _abi, runner) as unknown as EvolveLand;
  }
}
