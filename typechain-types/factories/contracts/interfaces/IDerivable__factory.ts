/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDerivable,
  IDerivableInterface,
} from "../../../contracts/interfaces/IDerivable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "underlyingCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "underlyingTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "derivedCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "derivedTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "Derive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "underlyingCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "underlyingTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "derivedCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "derivedTokenId",
        type: "uint256",
      },
    ],
    name: "Reclaim",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlyingCollection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "underlyingTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "royaltyRate",
        type: "uint256",
      },
    ],
    name: "derive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlyingCollection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "underlyingTokenId",
        type: "uint256",
      },
    ],
    name: "derivedOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
        ],
        internalType: "struct DerivedToken",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isDerivable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isReclaimable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isUsable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlyingCollection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "underlyingTokenId",
        type: "uint256",
      },
    ],
    name: "reclaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "derivedTokenId",
        type: "uint256",
      },
    ],
    name: "underlyingOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IDerivable__factory {
  static readonly abi = _abi;
  static createInterface(): IDerivableInterface {
    return new Interface(_abi) as IDerivableInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IDerivable {
    return new Contract(address, _abi, runner) as unknown as IDerivable;
  }
}
