/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFreeMintCommunityStrategy,
  IFreeMintCommunityStrategyInterface,
} from "../../../../contracts/interfaces/addons/IFreeMintCommunityStrategy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FreeMint",
    type: "event",
  },
  {
    inputs: [],
    name: "campaignId",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "claimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IFreeMintCommunityStrategy__factory {
  static readonly abi = _abi;
  static createInterface(): IFreeMintCommunityStrategyInterface {
    return new Interface(_abi) as IFreeMintCommunityStrategyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFreeMintCommunityStrategy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IFreeMintCommunityStrategy;
  }
}
